<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!-- <environmentMode>PRODUCTION</environmentMode> -->

  <!-- Domain model configuration -->
  <scanAnnotatedClasses>
    <packageInclude>org.optaplanner.examples.driverallot</packageInclude>
  </scanAnnotatedClasses>
  
  <!-- <planningEntityClass>org.optaplanner.examples.driverallot.domain.RouteTrip</planningEntityClass> -->

  <!-- Score configuration -->
  <scoreDirectorFactory>
    <scoreDefinitionType>HARD_SOFT</scoreDefinitionType>
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
    <scoreDrl>org/optaplanner/examples/driverallot/solver/driverAllotScoreRules.drl</scoreDrl>
    <initializingScoreTrend>ONLY_DOWN</initializingScoreTrend>
    <!--<assertionScoreDirectorFactory>-->
      <!--<easyScoreCalculatorClass>org.optaplanner.examples.cloudbalancing.solver.score.CloudBalancingMapBasedEasyScoreCalculator</easyScoreCalculatorClass>-->
    <!--</assertionScoreDirectorFactory>-->
  </scoreDirectorFactory>

  <!-- Optimization algorithms configuration -->
  <termination>
    <terminationCompositionStyle>OR</terminationCompositionStyle>
  	<!-- <bestScoreFeasible>true</bestScoreFeasible> -->
  	<!-- <bestScoreLimit>0hard/-4999soft</bestScoreLimit> -->
    <secondsSpentLimit>2</secondsSpentLimit>
  </termination>
  
  
  <!-- Power tweaked optimization algorithms configuration -->
  <constructionHeuristic>
  	<constructionHeuristicType>ALLOCATE_ENTITY_FROM_QUEUE</constructionHeuristicType>
    <entitySorterManner>DECREASING_DIFFICULTY_IF_AVAILABLE</entitySorterManner>
    <valueSorterManner>INCREASING_STRENGTH_IF_AVAILABLE</valueSorterManner>
  </constructionHeuristic>
  
  
  <!-- <constructionHeuristic>
    <queuedEntityPlacer>
      <entitySelector id="placerEntitySelector">
        <cacheType>PHASE</cacheType>
        <selectionOrder>SORTED</selectionOrder>
        <sorterManner>DECREASING_DIFFICULTY</sorterManner>
      </entitySelector>
      <changeMoveSelector>
        <entitySelector mimicSelectorRef="placerEntitySelector"/>
        <valueSelector>
          <cacheType>PHASE</cacheType>
          <selectionOrder>SORTED</selectionOrder>
          <sorterManner>INCREASING_STRENGTH</sorterManner>
        </valueSelector>
      </changeMoveSelector>
    </queuedEntityPlacer>
  </constructionHeuristic> -->
  
  <localSearch>
  	<acceptor>
      <entityTabuSize>7</entityTabuSize>
    </acceptor>
    <forager>
      <acceptedCountLimit>300</acceptedCountLimit>
    </forager>
  </localSearch>
  
  <!-- <localSearch>
  	<acceptor>
      <entityTabuSize>7</entityTabuSize>
    </acceptor>
    <forager>
      <acceptedCountLimit>200</acceptedCountLimit>
    </forager>
  </localSearch> -->
  
  <!-- <localSearch>
  	<localSearchType>TABU_SEARCH</localSearchType>
    <unionMoveSelector>
      <changeMoveSelector>
      	<selectionOrder>RANDOM</selectionOrder>
      </changeMoveSelector>
      <swapMoveSelector/>
      <pillarChangeMoveSelector/>
      <pillarSwapMoveSelector/>
    </unionMoveSelector>
    <acceptor>
      <entityTabuSize>7</entityTabuSize>
    </acceptor>
    <forager>
      <acceptedCountLimit>1000</acceptedCountLimit>
    </forager>
  </localSearch> -->
</solver>
